package Bibliography.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AthorElement = 0;
  public static final int Author = 1;
  public static final int AuthorRef = 2;
  public static final int Authors = 3;
  public static final int BiblioElement = 4;
  public static final int BiblioRecord = 5;
  public static final int Bibliography = 6;
  public static final int EtAlAuthor = 7;
  public static final int Person = 8;
  public static final int PublicationYear = 9;
  public static final int Title = 10;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x73ad91e16c324523L, 0xb6965b28422e6c8eL);
    builder.put(0x2e1fe5d67b9125f6L, AthorElement);
    builder.put(0x2e1fe5d67b90e410L, Author);
    builder.put(0x2e1fe5d67b90f73fL, AuthorRef);
    builder.put(0x2e1fe5d67b90e408L, Authors);
    builder.put(0x2e1fe5d67b90db76L, BiblioElement);
    builder.put(0x2e1fe5d67b90db73L, BiblioRecord);
    builder.put(0x2e1fe5d67b90db50L, Bibliography);
    builder.put(0x2e1fe5d67b9131ffL, EtAlAuthor);
    builder.put(0x2e1fe5d67b90f742L, Person);
    builder.put(0x2e1fe5d67b911accL, PublicationYear);
    builder.put(0x2e1fe5d67b90de49L, Title);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
