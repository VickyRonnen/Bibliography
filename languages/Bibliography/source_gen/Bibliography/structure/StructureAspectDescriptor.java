package Bibliography.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAthorElement = createDescriptorForAthorElement();
  /*package*/ final ConceptDescriptor myConceptAuthor = createDescriptorForAuthor();
  /*package*/ final ConceptDescriptor myConceptAuthorRef = createDescriptorForAuthorRef();
  /*package*/ final ConceptDescriptor myConceptAuthors = createDescriptorForAuthors();
  /*package*/ final ConceptDescriptor myConceptBiblioElement = createDescriptorForBiblioElement();
  /*package*/ final ConceptDescriptor myConceptBiblioRecord = createDescriptorForBiblioRecord();
  /*package*/ final ConceptDescriptor myConceptBibliography = createDescriptorForBibliography();
  /*package*/ final ConceptDescriptor myConceptEtAlAuthor = createDescriptorForEtAlAuthor();
  /*package*/ final ConceptDescriptor myConceptPerson = createDescriptorForPerson();
  /*package*/ final ConceptDescriptor myConceptPublicationYear = createDescriptorForPublicationYear();
  /*package*/ final ConceptDescriptor myConceptTitle = createDescriptorForTitle();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAthorElement, myConceptAuthor, myConceptAuthorRef, myConceptAuthors, myConceptBiblioElement, myConceptBiblioRecord, myConceptBibliography, myConceptEtAlAuthor, myConceptPerson, myConceptPublicationYear, myConceptTitle);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AthorElement:
        return myConceptAthorElement;
      case LanguageConceptSwitch.Author:
        return myConceptAuthor;
      case LanguageConceptSwitch.AuthorRef:
        return myConceptAuthorRef;
      case LanguageConceptSwitch.Authors:
        return myConceptAuthors;
      case LanguageConceptSwitch.BiblioElement:
        return myConceptBiblioElement;
      case LanguageConceptSwitch.BiblioRecord:
        return myConceptBiblioRecord;
      case LanguageConceptSwitch.Bibliography:
        return myConceptBibliography;
      case LanguageConceptSwitch.EtAlAuthor:
        return myConceptEtAlAuthor;
      case LanguageConceptSwitch.Person:
        return myConceptPerson;
      case LanguageConceptSwitch.PublicationYear:
        return myConceptPublicationYear;
      case LanguageConceptSwitch.Title:
        return myConceptTitle;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAthorElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "AthorElement", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b9125f6L);
    b.class_(false, false, false);
    b.super_("Bibliography.structure.BiblioElement", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db76L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381587446");
    b.version(2);
    b.aggregate("authors", 0x2e1fe5d67b9125f7L).target(0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90e410L).optional(false).ordered(true).multiple(true).origin("3323627759381587447").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAuthor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "Author", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90e410L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381570576");
    b.version(2);
    b.property("firstName", 0x2e1fe5d67b917c2cL).type(PrimitiveTypeId.STRING).origin("3323627759381609516").done();
    b.property("middleName", 0x2e1fe5d67b9182b9L).type(PrimitiveTypeId.STRING).origin("3323627759381611193").done();
    b.property("lastName", 0x2e1fe5d67b917c2eL).type(PrimitiveTypeId.STRING).origin("3323627759381609518").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAuthorRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "AuthorRef", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90f73fL);
    b.class_(false, false, false);
    b.super_("Bibliography.structure.Author", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90e410L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381575487");
    b.version(2);
    b.associate("author", 0x2e1fe5d67b913202L).target(0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90f742L).optional(false).origin("3323627759381590530").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAuthors() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "Authors", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90e408L);
    b.class_(false, false, false);
    b.super_("Bibliography.structure.BiblioElement", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db76L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381570568");
    b.version(2);
    b.aggregate("authors", 0x2e1fe5d67b90e40eL).target(0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90e410L).optional(true).ordered(true).multiple(true).origin("3323627759381570574").done();
    b.alias("authors");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBiblioElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "BiblioElement", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db76L);
    b.class_(false, true, false);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381568374");
    b.version(2);
    b.alias("<element>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBiblioRecord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "BiblioRecord", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db73L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381568371");
    b.version(2);
    b.aggregate("elements", 0x2e1fe5d67b90db74L).target(0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db76L).optional(false).ordered(true).multiple(true).origin("3323627759381568372").done();
    b.alias("biblio-record");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBibliography() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "Bibliography", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db50L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381568336");
    b.version(2);
    b.aggregate("records", 0x2e1fe5d67b90db6dL).target(0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db73L).optional(true).ordered(true).multiple(true).origin("3323627759381568365").done();
    b.alias("bibliography");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEtAlAuthor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "EtAlAuthor", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b9131ffL);
    b.class_(false, false, false);
    b.super_("Bibliography.structure.Author", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90e410L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381590527");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPerson() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "Person", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90f742L);
    b.class_(false, false, false);
    b.super_("Bibliography.structure.Author", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90e410L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381575490");
    b.version(2);
    b.alias("person");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPublicationYear() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "PublicationYear", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b911accL);
    b.class_(false, false, false);
    b.super_("Bibliography.structure.BiblioElement", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db76L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381584588");
    b.version(2);
    b.property("value", 0x2e1fe5d67b911acdL).type(PrimitiveTypeId.INTEGER).origin("3323627759381584589").done();
    b.alias("publication year");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTitle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Bibliography", "Title", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90de49L);
    b.class_(false, false, false);
    b.super_("Bibliography.structure.BiblioElement", 0x73ad91e16c324523L, 0xb6965b28422e6c8eL, 0x2e1fe5d67b90db76L);
    b.origin("r:3ff2f460-8791-4bef-a961-5dd840abed83(Bibliography.structure)/3323627759381569097");
    b.version(2);
    b.property("value", 0x2e1fe5d67b90de4aL).type(PrimitiveTypeId.STRING).origin("3323627759381569098").done();
    b.alias("title");
    return b.create();
  }
}
